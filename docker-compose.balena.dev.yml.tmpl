# vim: ft=yaml

version: "2"
services:
  screenconnect-wifi-connect:
    image: tccconnect/screenconnect-wifi-connect:${GIT_SHORT_HASH}-${BOARD}
    build:
      context: .
      dockerfile: ./docker/Dockerfile.wifi-connect
    depends_on:
      - screenconnect-viewer
    environment:
      PORTAL_LISTENING_PORT: 8000
      CHECK_CONN_FREQ: 10
      PORTAL_SSID: 'Screenconnect WiFi Connect'
      DBUS_SYSTEM_BUS_ADDRESS: 'unix:path=/host/run/dbus/system_bus_socket'
    network_mode: host
    privileged: true
    labels:
      io.balena.features.dbus: "1"
      io.balena.features.firmware: "1"

  screenconnect-server:
    image: tccconnect/screenconnect-server:${GIT_SHORT_HASH}-${BOARD}
    build:
      context: .
      dockerfile: ./docker/Dockerfile.server
    environment:
      - HOME=/data
      - LISTEN=0.0.0.0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    devices:
      - "/dev/vchiq:/dev/vchiq"
    restart: always
    volumes:
      - resin-data:/data
    labels:
      io.balena.features.supervisor-api: '1'

  screenconnect-viewer:
    image: tccconnect/screenconnect-viewer:${GIT_SHORT_HASH}-${BOARD}
    build:
      context: .
      dockerfile: ./docker/Dockerfile.viewer
    depends_on:
      - screenconnect-server
    environment:
      - HOME=/data
      - PORT=80
      - NOREFRESH=1
      - LISTEN=screenconnect-nginx
    extra_hosts:
      - "host.docker.internal:host-gateway"
    privileged: true
    restart: always
    shm_size: ${SHM_SIZE}
    volumes:
      - resin-data:/data
    labels:
      io.balena.features.supervisor-api: '1'

  screenconnect-websocket:
    image: tccconnect/screenconnect-websocket:${GIT_SHORT_HASH}-${BOARD}
    build:
      context: .
      dockerfile: ./docker/Dockerfile.websocket
    depends_on:
      - screenconnect-server
    environment:
      - HOME=/data
      - LISTEN=0.0.0.0
    restart: always
    volumes:
      - resin-data:/data

  screenconnect-celery:
    image: tccconnect/screenconnect-celery:${GIT_SHORT_HASH}-${BOARD}
    build:
      context: .
      dockerfile: ./docker/Dockerfile.celery
    depends_on:
      - screenconnect-server
      - redis
    environment:
      - HOME=/data
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    devices:
      - "/dev/vchiq:/dev/vchiq"
    restart: always
    volumes:
      - resin-data:/data
    labels:
      io.balena.features.supervisor-api: '1'

  redis:
    image: tccconnect/screenconnect-redis:${GIT_SHORT_HASH}-${BOARD}
    build:
      context: .
      dockerfile: ./docker/Dockerfile.redis
    ports:
      - 127.0.0.1:6379:6379
    restart: always
    volumes:
      - redis-data:/var/lib/redis

  screenconnect-nginx:
    image: tccconnect/screenconnect-nginx:${GIT_SHORT_HASH}-${BOARD}
    build:
      context: .
      dockerfile: ./docker/Dockerfile.nginx
    ports:
      - 80:80
    environment:
      - HOME=/data
    depends_on:
      - screenconnect-server
      - screenconnect-websocket
    restart: always
    volumes:
      - resin-data:/data:ro

volumes:
  resin-data:
  redis-data:
